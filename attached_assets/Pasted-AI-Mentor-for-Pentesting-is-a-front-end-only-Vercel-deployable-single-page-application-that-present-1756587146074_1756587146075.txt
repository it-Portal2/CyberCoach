AI Mentor for Pentesting is a front-end-only, Vercel-deployable single-page application that presents an always-available, named AI version of you as a mentor who thinks, questions, and coaches exactly like an experienced cybersecurity trainer: it guides students through a standardized, safe pentest methodology (scope & authorization, reconnaissance, scanning, vulnerability analysis, safe exploitation in sandboxed labs only, post-exploitation analysis, reporting), offers practice exercises and randomized exam modes with auto-grading and rubric-based feedback, runs interactive role-play interviews and oral-question sessions where the AI asks probing questions and scores answers, provides progressive hints (tiered hints to avoid spoon-feeding), generates remediation plans when a student is stuck, and surfaces learning objectives and KPIs (time to complete task, accuracy, concept confidence). Architecturally it is a modular React (Vite or Next.js static export) app with Tailwind for styling, a PWA shell and IndexedDB/localForage for offline-first student progress and scenario storage, an authoring format (JSON) for instructors to create scenario-based labs and quizzes, embeddable challenge frames (iframes) for third-party lab providers or instructor-hosted sandboxes, and in-browser safe simulators (WebAssembly or JS sandboxes, xterm.js for terminal emulation and Monaco editor for code tasks) so no live-target attacks are performed; because it is front-end-only the app avoids storing secrets by using OAuth/PKCE to let students link their own accounts to lab providers or by instructing instructors to provide ephemeral tokens, and it supports an alternative client-side LLM path (open-source WebAssembly/ONNX models) or secure no-code AI Builder tokens rather than hardcoding production API keys. The mentor persona prompt is pre-baked: introduce the mentor by your name, enforce pedagogical constraints (ask clarifying questions first, return JSON-first structured outputs with summary, steps[], hints[], evaluation{score,feedback}, references[]), always include a confidence score and one measurable KPI, refuse to produce step-by-step exploit code for non-authorized targets and insist on authorization checks; exam templates are authorable and auto-graded via semantic matching (LLM embeddings) with fallback regex checks for objective tasks, and an integrated spaced-repetition flashcard engine exports to Anki/CSV. For a “mind-blowing” UI, combine an interactive challenge map, animated progress heatmap, drag-and-drop playbook builder, replayable session timelines, and lightweight micro-interactions via Framer Motion and Lottie animations while keeping dependencies minimal. Recommended npm packages to accelerate development (without excessive bloat) include React, Vite or Next.js (static), Tailwind CSS, monaco-editor, xterm.js, prism-react-renderer or react-syntax-highlighter, idb-keyval or localforage, zustand or jotai for compact state, react-query or SWR for client data-sync patterns, framer-motion and lottie-react for motion, uuid, and an embeddable WASM runtime or sandbox wrapper for safe challenge execution; analytics and telemetry should be optional and privacy-preserving (student opt-in). Operational and ethical guardrails are mandatory: require signed rules-of-engagement, store only minimal metadata, redact PII, log attempts for instructor review only, and include automated refusal and escalation messages if a user asks for real-world attack instructions. Developer-friendly touches include a single JSON scenario schema, import/export for challenge packs, modular UI components for reuse, example templates for common labs (recon/scanning/reporting), and a phased roadmap (MVP: guided coaching + quiz engine + local sandboxing; v2: authoring marketplace + LMS integration + leaderboard + certificate generation). This single-paragraph plan balances bold, next-generation UX and AI coaching with pragmatic front-end constraints, strong safety/compliance defaults, and concrete tech choices so you can hand it directly to developers and start building an immersive, high-impact mentoring product for penetration testing, ethical hacking, and cybersecurity learning.